close all
clear

files = {'001.jpg','002.jpg','003.jpg','004.jpg','005.jpg','006.jpg','007.jpg','008.jpg','009.jpg','010.jpg','011.jpg','oversized.jpg','fire01.jpg','fire02.jpg'};
numberOfFiles = numel(files);
numberOfAttributes = 5; %Width, length, width/Length ratio, speed, colour
vehicleData(numberOfAttributes,numberOfFiles) = "Null";

for i = 1:numberOfFiles
    [carWidth, carLength, carSpeed, carColour] = findCarData(string(files{i}), i);
    newVehicleData = [carWidth, carLength, carWidth/carLength, carSpeed, carColour];
    vehicleData2 = [vehicleData]
end

function [carWidth, carLength, carSpeed, carColour] = findCarData(filepath, fileIndex)
    % load the Car target model
    targetRGB = imread(filepath);

    targetHSV = rgb2hsv(targetRGB);
    targetHue = targetHSV(:,:,2);

    targetBW = imbinarize(targetHue);

    % % % % Remove noise from BW image
    % erodElemSize = 1;
    % erodSElem = strel('square', erodElemSize);
    % targetEroded = imerode(targetBW, erodSElem);

    % % % % Close off the image (fill gaps)
    % closeElemSize = 1;
    % closeSElem = strel('square', closeElemSize);
    % targetClosed = imclose(targetEroded, closeSElem);

    % blna
    [targetBoundries, targetLabels, targetTotalObjects, targetDependancies] = bwboundaries(targetBW); 

    % find largest boundary
    LengthOfEachCell = cellfun('length', targetBoundries);
    [maxCellLength, index] = max(LengthOfEachCell);
    maxTargetBoundry = targetBoundries{index};

    % Show boundary
    [M N] = size(targetBW);
    g1 = bound2im(maxTargetBoundry, M, N, min(maxTargetBoundry(:,1)),min(maxTargetBoundry(:,2)));

    minCoord = min(maxTargetBoundry);
    top = minCoord(1);
    left = minCoord(2);

    maxCoord = max(maxTargetBoundry);
    bottom = maxCoord(1);
    right = maxCoord(2);

    bumperMiddle = (right-left)/2 + left;

    figure, imshow(targetRGB), hold on;

    % plot the centre of the template
    % draw a horizotal bar at the cntre
    xx = [bumperMiddle-10,bumperMiddle+10];
    yy = [bottom,bottom];
    plot(xx,yy,'LineWidth', 2, 'Color',[1.0,0.0,0.0]); % drawing

    % draw a vertical bar at the centre
    xx = [bumperMiddle, bumperMiddle];
    yy = [bottom-10,bottom+10];
    plot(xx,yy,'LineWidth', 2, 'Color',[1.0,0.0,0.0]);


    carWidth = (right-left);
    carLength = (bottom-top);
    fireTruckWidthLengthRatio = (1/3);
    carWidthLengthRatio = (carWidth/carLength);
    istheRatioGreaterThanFireTruck = fireTruckWidthLengthRatio >= carWidthLengthRatio;
    carSpeed = 9001;
    carColour = 9002;
end

